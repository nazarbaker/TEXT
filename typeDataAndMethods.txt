Data types in JS
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
Primitives:

1) Number (all numbers, including floating point)
2) String (everyting inside '' or "")
3) Boolean (true & false)
4) Null (nothing)
5) Undefined (not yet defined)

6) And 'king-of-all-types': Object

typeof(x) - показує тип даних в змінній x ("number", "string", "object", "boolean", "undefined")

====================================================================================================================

1) Number:
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
> 0xFF -> 255 -> 16-ва система.
> 3e5 -> 300000 -> скорочення, означає 3-ри з 5-ма нулями.
> 12e-5 -> 0,00012 -> скорочення, 5 означає кількість знаків після коми.
> 1/0 -> Infinity
> Infinity > 500 -> true
> Infinity + 100 -> Infinity
>0/0 -> NaN
NaN - також числове значення, яке не рівне нікому навіть саме собі.
> NaN == NaN -> false
> NaN === NaN -> false

Операції з числами:
--------------------------------------------------------------------------------------------------------------------

Number("123"); // 123 -> робить число.
"12" - 0; / 12
"12" + 0; / 120
+"12"; / 12
+"12px"; / NaN
+"str"; / NaN
+undefined; / NaN
+null; / 0

--------------------------------------------------------------------------------------------------------------------

parseInt("12px"); / 12 -> витягує числа з ліва на право до першої помилки.
parseInt("lalala"); / NaN
parseInt("lalala12345"); / NaN
parseInt("0xff"); / 255 -> перетворить з 16 системи в 10-ву, тільки тому що перший 0.
parseInt("abcd"); / NaN
parseInt("abcd", 16); / 43981 -> перетворить з 16 системи в 10-ву.
parseInt("z", 36); / 35
parseInt("2n9c", 36); / 123456
parseInt('11100',2); / 28

parseFloat("12.3.4.5"); / 12.3 -> витягує числа з ліва на право навіть з комою(крапкою).

255..toString(16); / "ff" -> перетворює число в 16-ве.
123456..toString(36); / "2n9c" -> перетворює число в 36-ве.

var x = "blablabla";
x.toString(16); / "blablabla" -> якщо замість числа змінна, то пишеться через одну крапку.
x.toString(16); / "blablabla" -> якщо змінна строка, а не число то виведе ту саму строку.

--------------------------------------------------------------------------------------------------------------------
Перевірка на число:

isNaN(NaN) -> true -> єдиний спосіб перевірити чи це NaN
isNaN(number) -> false
!isNaN(number) -> true
!isNaN(Infinity); / true

isFinite(n); // повертає true, якщо аргумент число або може перетворитися на нього.
isFinite(NaN); / false
isFinite(Infinity); / false
isFinite(undefined); / false
isFinite('string'); /false
isFinite(null); / true
isFinite(number); / true
isFinite('5'); / true
isFinite(true); /true
isFinite(false); /true

--------------------------------------------------------------------------------------------------------------------

Округлення:

Math.floor(1.25); / 1 -> заокруглить до меншого.
Math.ceil(1.25); / 2 -> заокруглить до більшого.
Math.round(1.25); / 1 -> заокруглить правильно, але бере за основу тільки 10-ту частину.

Якщо потрібно округлити до 10-х:

Math.round(1.25*10)/10; / 1.3

1.25.toFixed(1); / "1.3" -> виводить у вигляді строки з кількістю символів після коми.
1.25.toFixed(5); / "1.25000"
+1.25.toFixed(1); / 1.3 -> щоб отримати число додається +

округлення побітовими операторами:

12.645^0; / 12
~~12.645; / 12
12.3 + 34.5 ^ 0; / 46
--------------------------------------------------------------------------------------------------------------------

Особливості додавання:

0.2 + 0.1 == 0.3; / false;
+(0.1+0.2).toFixed(2) === 0.3; / true

--------------------------------------------------------------------------------------------------------------------

Math: http://javascript.ru/Math

Math.pow(8, 3); / 512 -> 8 в 3-ій степені.
Math.pow(8, 1/3); / 2 -> дробна степінь, взяти корінь.
Math.pow(8, -1/3); / 0.5 -> негативна степінь?
Math.max(1, 2, 3); / 3 ->
Math.min(1, 2, 3); / 1 ->
Math.random(); -> генерує випадкове число від 0 до 1.
Math.random() * 10; -> від 0 до 10.
Math.random() * 10 + 5; -> від 5 до 15.
Math.sqrt(x) - квадратний корінь числа.
Math.abs(x) - абсолютне значення числа. (-5 -> 5; 5 -> 5)


====================================================================================================================

2) String:
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

String(null); // "null" -> перетворює дані на строки.

var str = "Stroka"
str.length; // 6 -> вертає довжину строки.
str[0]; // "S" -> вертає символ під номером 0.
str[10]; // undefined -> символу немає
str.charAt(0); // "S" -> вертає символ під номером 0.
str.charAt(10); // "" -> символу немає

str.charCodeAt(0); // 83 -> код великої букви "S"
String.fromCharCode(83); // "S" -> вертає символ коду 83.

'A'.toLowerCase(); // "a" ->
'a'.toUpperCase(); // "A" ->

str.indexOf('oka'); // 3 -> вертає позицію підстроки. Якщо її нема вертає -1
str.lastIndexOf('oka'); // 3 -> те саме але з кінця.

var str2 = "widget-id";
var target = "id";
str2.indexOf(target, 2); / 7 -> шукає з другої позиції.

str.slice(1, 4); // "tro" -> вертає символи з 1 по 4, не включаючи 4-ий.
str.slice(-4); // "roka" -> Можна вводити один аргумент, або мінусове значення.

str.substring(1,4); "tro" -> вертає символи з 1 по 4, не включаючи 4-ий.

str.substr(3,3); // "oka" -> вертає строку з 3-го символу і на 3 символа.
str.substr(4); // "ka" -> Можна вводити один аргумент.

str[str.length-1]; / "a" -> виведе останній символ.



\n - перенос строки.

====================================================================================================================

3) Boolean (true & false):
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
false: !!false; !true; 0; NaN; ""; null; undefined.

true: !!true; !false; "string"; number; objects.



====================================================================================================================


4,5) Null (nothing) and Undefined (not yet defined):
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

+undefined; / NaN
+null; / 0

null == undefined; // true

Странності null:

null >= 0; // true
null <= 0; // true

null > 0; // false
null < 0; // false
null == 0; // false

=======================================================================================================================

arguments is an array like object holding all of the values passed to the function.
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
arguments.length - number of arguments. (виведе кількість значень переданих функції при виклику).
arguments - an array of values passed to the function. (виведе масив з значеннями переданих функції при виклику).
arguments[i] - виведе аргумент під номером і.

function showAllArguments() { // no named arguments
  console.log(arguments);
  console.log(arguments.length);
  console.log(arguments[1]);
}

showAllArguments(1, null, 'string');

> [1, null, 'string']
> 3
> null

=======================================================================================================================

6) Objects:
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

6.1 Objects:

Create objects:

objName = new Object();
objName ={};
var person = {}; // the best way.

create properties and values:

person.name = "Vasya";
person['name'] = "Vasya"; // Цей спосіб використовують коли властивість має назву з декількох слів.

delete:

delete person.name; // true -> delete properties;
'name' in person; // false -> in verifies the existence of properties.

another way of writing:

var name = {
	width: 300,
	height: 200,
	title: 'menu'
}

В якості значення можна записати інший об'єкт:

var user = {
	name: 'Tanya',
	age: 25,
	size: {
		top: 90,
		middle: 60,
		bottom: 90
	}
}

user.name; // "Tanya"
user.size.top; // 90

Перебір властивостей об'єкту:

var menu = {
	width: 300,
	height: 200,
	title: 'menu'
}

for(var key in menu) {
	console.log(key + menu[key]);
}

результат:

width300
height200
titlemenu

key - стає по черзі кожною властивістю об'єкту, протягом циклу.

Наприклад можна порахувати скільки властивостей є в обєкті:
var counter = 0;
for(var key in menu) {
	counter++;
}

Копіювання обєктів:

var user = {name: 'Vasya'}; // створили об'єкт.
var admin = user; // Тут копіюється не об'єкт, а посилання на нього. Об'єкт залишається один.

Правильне копіювання:

var user = {
	name: 'Vasya',
	age: 30
}

var clone = {};
for(var key in user) {
	clone[key] = user[clone];
}
-------------------------------------------------------------------------------------------------------------------

Масиви:

Create array:

var arr = []; // created empty array.
var fruits = ['apple', 'pear', 'plum'];

fruits[0]; // 'apple' -> call element of the array
fruits.length; // 3 - number elements in the array
fruits; // ["apple", "pear", "plum"] -> the whole array

В масаві можна зберігати елементи любого типу навіть об'єкти:

var arr = [1, 'name', {name:'Kim'}, true];
arr[2]; // Object {name: "Kim"}
arr[2].name; // "Kim"

Методи для масивів:

arr.pow(); ->
arr.push(123); ->
arr.shift(); ->
arr.unshift ->

-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------
https://github.com/getify/You-Dont-Know-JS
